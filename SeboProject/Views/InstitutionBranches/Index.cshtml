@using SeboProject.Utilities
@model Pagination<SeboProject.Models.InstitutionBranch>

@{
    ViewData["Title"] = "Intitutions Branches";

}

<h2>Institutions Branches Management</h2>

<p>
    <a asp-action="Create">Add a Institution Branch</a>
</p>
<form asp-action="Index" method="get">
    <div class="form-actions  no-color">
        <p>
            Branch Filter:  <input type="text" name="SearchString" value="@ViewData["SearchString"]" />
            <input type="submit" value="Search" class="btn  btn-default" />  |
            <a asp-action="Index">All records</a> | Records Displayed @Model.TotalR
        </p>
    </div>
</form>


<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["InstitutionOrder"]">Institution</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["BranchNameOrder"]"> Branch Name</a>
            </th>
            <th></th>
        </tr>
        <tr>
            <form asp-action="Index" method="post">
                <th>
                    @Html.DropDownList("InstitutionFilter", ((IEnumerable<SelectListItem>)ViewData["InstitutionFilter"]), "All", new    {
                        onchange = "submit();"
                    })
                </th>
                <th>
                    @Html.DropDownList("BranchNameFilter", ((IEnumerable<SelectListItem>)ViewData["BranchNameFilter"]), "All", new    {
                        onchange = "submit();"
                    })
                </th>
            </form>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td nowrap>
                @Html.DisplayFor(modelItem => item.Institution.InstitutionName)
            </td>
            <td nowrap>
                @Html.DisplayFor(modelItem => item.InstitutionBranchName)
            </td>
            <td nowrap>
                <a asp-action="Edit" asp-route-id="@item.InstitutionBranchId" class="btn-warning">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.InstitutionBranchId" class="btn-info">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.InstitutionBranchId" class="btn-danger">Delete</a>
            </td>
        </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>


@for (int i = 1; i <= Model.TotalPages; i++)
{
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-page="@i"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default">
        @i
    </a>
}
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>

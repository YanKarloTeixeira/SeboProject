@using SeboProject.Utilities
@model Pagination<SeboProject.Models.Book>

@{
    ViewData["Title"] = "Books";
}

<h2>BOOKS</h2>

<p>
    <a asp-action="Create">Add a New Book</a>
</p>
<form asp-action="Index" method="get">
    <div class="form-actions  no-color">
        <p>
            Book Filter:  <input type="text" name="SearchString" value="@ViewData["SearchString"]" />
            <input type="submit" value="Search" class="btn  btn-default" />  |
            <a asp-action="Index">All records</a> | Records Displayed @Model.TotalR
        </p>
    </div>
    @Html.DropDownList("YanFilter", ((IEnumerable<SelectListItem>)ViewData["YanFilter"]), "All", new {
                           onchange = "submit();"
                       })
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["SellerOrder"]">Seller</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["TitleOrder"]">Title</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["IsbnOrder"]">ISBN</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["EditionOrder"]">Edition</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["PublisherOrder"]">Publisher</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["CreationDateOrder"]">Creation Date</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["PriceOrder"]">Price</a>
            </th>
            <th>
                Blocked
            </th>
            <th>
                Is Wait List?
            </th>
            <th>
                Description
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["StudyAreaOrder"]">Study Area</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["QuantityOrder"]">Quantity</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["VisualizationsOrder"]">Visualizations</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["QuantitySoldOrder"]">QuantitySold</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["BookConditionOrder"]">Book Condition</a>
            </th>
            <th></th>
        </tr>
    </thead>

    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Seller.UserName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ISBN)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Edition)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Publisher)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreationDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Blocked)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsWaitList)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StudyArea.StudyAreaName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Quantity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Visualizations)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.QuantitySold)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BookCondition.Condition)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.BookId" class="btn-warning">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.BookId" class="btn-info">Details</a>|
                    <a asp-action="Delete" asp-route-id="@item.BookId" class="btn-danger">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>


@for (int i = 1; i <= Model.TotalPages; i++)
{
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-page="@i"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default">
        @i
    </a>
}
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
